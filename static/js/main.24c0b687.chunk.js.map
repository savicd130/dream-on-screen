{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","monster","id","src","name","email","CardList","monsters","map","SearchBox","placeholders","hendleChange","type","placeholder","onChange","App","e","setState","searchField","target","value","state","a","fetch","res","json","users","this","filteredMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAGaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,aAAQF,EAAMG,QAAQC,IACzBC,IAAG,+BAA0BL,EAAMG,QAAQC,GAAxC,eAEL,6BAAKJ,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCLTC,EAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCNdO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAAjB,OACvB,uBACEZ,UAAU,SACVa,KAAK,SACLC,YAAaH,EACbI,SAAUH,MCmCCI,G,wDArCb,aAAe,IAAD,8BACZ,gBAYFJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAZtC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,E,4FAOd,8BAAAI,EAAA,sEACoBC,MAAM,8CAD1B,cACQC,EADR,gBAEsBA,EAAIC,OAF1B,OAEQC,EAFR,OAGEC,KAAKV,SAAS,CAAEV,SAAUmB,IAH5B,gD,0EAUA,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACZU,EAAkBrB,EAASsB,QAAO,SAAC5B,GAAD,OACtCA,EAAQG,KAAK0B,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAK/B,UAAU,MAAf,UACE,8CACA,cAAC,EAAD,CACEW,aAAa,kBACbC,aAAcgB,KAAKhB,eAGrB,cAAC,EAAD,CAAUJ,SAAUqB,W,GAhCVI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.24c0b687.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\n\r\nexport const Card = (props) => (\r\n  <div className=\"card-container\">\r\n    <img\r\n      alt={`rob${props.monster.id}`}\r\n      src={`https://robohash.org/${props.monster.id}?set=set2`}\r\n    />\r\n    <h2>{props.monster.name}</h2>\r\n    <p>{props.monster.email}</p>\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport './card-list.style.css';\r\n\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({ placeholders, hendleChange }) => (\r\n  <input\r\n    className=\"search\"\r\n    type=\"search\"\r\n    placeholder={placeholders}\r\n    onChange={hendleChange}\r\n  />\r\n);\r\n","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n  }\n  async componentDidMount() {\n    const res = await fetch('https://jsonplaceholder.typicode.com/users');\n    const users = await res.json();\n    this.setState({ monsters: users });\n  }\n\n  hendleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonster = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters App</h1>\n        <SearchBox\n          placeholders=\"search monsters\"\n          hendleChange={this.hendleChange}\n        />\n\n        <CardList monsters={filteredMonster} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}